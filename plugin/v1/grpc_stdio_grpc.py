# Generated by the Protocol Buffers compiler. DO NOT EDIT!
# source: plugin/v1/grpc_stdio.proto
# plugin: grpclib.plugin.main
import abc
import typing

import grpclib.const
import grpclib.client
if typing.TYPE_CHECKING:
    import grpclib.server

import google.protobuf.empty_pb2
import plugin.v1.grpc_stdio_pb2


class GRPCStdioBase(abc.ABC):

    @abc.abstractmethod
    async def StreamStdio(self, stream: 'grpclib.server.Stream[google.protobuf.empty_pb2.Empty, plugin.v1.grpc_stdio_pb2.StdioData]') -> None:
        pass

    def __mapping__(self) -> typing.Dict[str, grpclib.const.Handler]:
        return {
            '/plugin.v1.GRPCStdio/StreamStdio': grpclib.const.Handler(
                self.StreamStdio,
                grpclib.const.Cardinality.UNARY_STREAM,
                google.protobuf.empty_pb2.Empty,
                plugin.v1.grpc_stdio_pb2.StdioData,
            ),
        }


class GRPCStdioStub:

    def __init__(self, channel: grpclib.client.Channel) -> None:
        self.StreamStdio = grpclib.client.UnaryStreamMethod(
            channel,
            '/plugin.v1.GRPCStdio/StreamStdio',
            google.protobuf.empty_pb2.Empty,
            plugin.v1.grpc_stdio_pb2.StdioData,
        )
